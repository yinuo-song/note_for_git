##建立新的git仓库
====================

1.在想要上传的项目根目录下打开终端，初始化git: git init
2.在github上右上角手动创建远程仓库
（3.1）将远程仓库和本地仓库链接：git remote add origin https://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@github.com/yinuo-song/note_for_movebase.git
【origin：url的别名，可以改；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是github的token（可以在setting里申请）；repositoryname是想要链接的远程仓库的名字】
（3.2）直接用ssh链接：git remote add origin git@github.com:yinuo-song/hallwayROS.git
其实就是 git remote add [URL别名] [要链接的仓库的SSH]


##更新git信息：
====================

1.把所有代码都添加到缓存区： 添加文件目录下所有文件 git add .
2.提交缓存区到仓库区： git commit -m "description"（会有加载的info一行一行出现～）
（3.）连接测试：ssh -T git@github.com
4.push到远程仓库：git push origin master 【origin：远程仓库url的别名，master：branch名】（会有上传的info一行一行出现～）
尽量不要在git上直接编辑，不然再push就有版本冲突了

建议使用ssh，当没有网络的时候也可以push
或者用vscode里的commit,添加SSH到小窗口，然后pull,push
私有的仓库不能用token来push啊。。。。


2022-11-28
debug先看语法啊。。。。。


2023-01-03
debug mpc.py 474

2023-04-05
时间久了可能会需要用ssh重新链接一下本地文件夹和git上的仓库(即上3.2命令),即可继续正常上传更新了

2024-02-03
新建仓库

一个bug:当我尝试在movebase.cpp中加入一个subscribe用于接收heatmap时,boost报错如图.
类似于https://answers.ros.org/question/331365/error-no-match-for-call-to-boost/
最后发现问题是: callback函数的参数类型写的不对
::ConstPtr是ROS中常用的数据类型"常量指针",当消息自动生成为代码时,一些类型会被重新定义并使用,比如一下两种转化,完成这种转化才能被boost使用.
::Ptr---->boost::shared_ptr<MSG>
::ConstPtr---->boost::shared_ptr<MSG const>
意义在于:使用常量指针将消息传递到callback里,避免消息复制,这个机制在处理点云/地图等大体量的信息时尤为有价值.
